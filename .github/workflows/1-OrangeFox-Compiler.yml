name: OrangeFox - Build

# Credits to:
# https://github.com/TeamWin
# https://gitlab.com/OrangeFox
# https://github.com/azwhikaru for Recovery Builder Template
# And all Contributors in every repositories I used

on:
  workflow_dispatch:
    inputs:
      MANIFEST_BRANCH:
        description: 'OrangeFox Manifest Branch'
        required: true
        default: '12.1'
        type: choice
        options:
        - 12.1
        - 11.0
      DEVICE_TREE:
        description: 'OrangeFox Device Tree'
        required: true
        default: 'https://github.com/TDD788/A12s-DevTree'
      DEVICE_TREE_BRANCH:
        description: 'OrangeFox Device Tree Branch'
        required: true
        default: 'DT-Builder'
      DEVICE_PATH:
        description: 'Specify your Device Path'
        required: true
        default: 'device/samsung/a12s'
      DEVICE_NAME:
        description: 'Specify your Device Codename'
        required: true
        default: 'a12s'
      RELEASE_TYPE:
        description: 'Release type'
        required: true
        type: choice
        options:
          - oficial
          - experimental
      BUILD_TARGET:
        description: 'Specify your Build Target'
        required: true
        default: 'recovery'
        type: choice
        options:
        - boot
        - recovery
        - vendorboot
        - you_mom

jobs:
  build:
    name: Build OFR by ${{ github.actor }}
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      CCACHE_BASEDIR: "${{ github.workspace }}"
    permissions:
      contents: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: "recursive"
        fetch-depth: 0
              
    - name: Clean-up
      uses: rokibhasansagar/slimhub_actions@main

    - name: Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 32
      
    - name: Build Environment
      run: |
       sudo apt-get update
       sudo apt-get install -y ca-certificates curl
       sudo install -m 0755 -d /etc/apt/keyrings
       sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
       sudo chmod a+r /etc/apt/keyrings/docker.asc
       echo \
         "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
         $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
       sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
       sudo apt-get update
       sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
       sudo apt install lz4
       sudo apt install gzip
       sudo apt install nodejs
       sudo apt install lzma
       sudo apt install git aria2 -y
       sudo apt install nodejs
       git clone https://gitlab.com/OrangeFox/misc/scripts
       cd scripts
       sudo bash setup/android_build_env.sh
       sed -i 's/cd -/cd ../g' setup/install_android_sdk.sh
       sudo bash setup/install_android_sdk.sh
       sudo bash setup/android_build_env.sh
       sed -i 's/cd -/cd ../g' setup/install_android_sdk.sh
       sudo bash setup/install_android_sdk.sh
      
    - name: Set-up Manifest
      if: github.event.inputs.MANIFEST_BRANCH == '11.0' || github.event.inputs.MANIFEST_BRANCH == '12.1'
      run: |
        mkdir -p ${GITHUB_WORKSPACE}/OrangeFox
        cd ${GITHUB_WORKSPACE}/OrangeFox
        git config --global user.name "TheDarkDeath788"
        git config --global user.email "thedarkdeath788@gmail.com"
        git clone https://gitlab.com/OrangeFox/sync.git -b master
        cd sync
        ./orangefox_sync.sh --branch ${{ github.event.inputs.MANIFEST_BRANCH }} --path ${GITHUB_WORKSPACE}/OrangeFox/fox_${{ github.event.inputs.MANIFEST_BRANCH }}
    - name: Clone Device Tree
      run: |
        cd ${GITHUB_WORKSPACE}/OrangeFox/fox_${{ github.event.inputs.MANIFEST_BRANCH }}
        git clone ${{ github.event.inputs.DEVICE_TREE }} -b ${{ github.event.inputs.DEVICE_TREE_BRANCH }} ./${{ github.event.inputs.DEVICE_PATH }}
        cd ${{ github.event.inputs.DEVICE_PATH }}
        echo "COMMIT_ID=$(git rev-parse HEAD)" >> $GITHUB_ENV
        
    - name: Building OrangeFox
      run: |
        cd ${GITHUB_WORKSPACE}/OrangeFox/fox_${{ github.event.inputs.MANIFEST_BRANCH }}
        set +e
        source build/envsetup.sh
        export ALLOW_MISSING_DEPENDENCIES=true
        set -e
        lunch twrp_${{ github.event.inputs.DEVICE_NAME }}-eng && make clean && mka adbd ${{ github.event.inputs.BUILD_TARGET }}image -j$(nproc --all)
      continue-on-error: true

    - name: Upload files
      if: github.event.inputs.RELEASE_TYPE == 'experimental'
      uses: actions/upload-artifact@v2
      with:
       name: Orange Fox Recovery for ${{ github.event.inputs.DEVICE_NAME }} ${{ env.BUILD_DATE }} Image
       path: |
        OrangeFox/fox_${{ github.event.inputs.MANIFEST_BRANCH }}/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/OrangeFox*.img
        
    - name: Upload files
      if: github.event.inputs.RELEASE_TYPE == 'experimental'
      uses: actions/upload-artifact@v2
      with:
       name: Orange Fox Recovery for ${{ github.event.inputs.DEVICE_NAME }} ${{ env.BUILD_DATE }} Zip
       path: |
        OrangeFox/fox_${{ github.event.inputs.MANIFEST_BRANCH }}/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/OrangeFox*.zip
        
    - name: Upload files
      if: github.event.inputs.RELEASE_TYPE == 'experimental'
      uses: actions/upload-artifact@v2
      with:
       name: Orange Fox Recovery for ${{ github.event.inputs.DEVICE_NAME }} ${{ env.BUILD_DATE }} Tar
       path: |
        OrangeFox/fox_${{ github.event.inputs.MANIFEST_BRANCH }}/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/OrangeFox*.tar
        
    - name: Set Release Properties
      run: |
        echo "BUILD_DATE=$(TZ=Asia/Manila date +%Y%m%d)" >> $GITHUB_ENV
        cd ${GITHUB_WORKSPACE}/OrangeFox/fox_${{ github.event.inputs.MANIFEST_BRANCH }}
        echo "MD5_IMG=$(md5sum out/target/product/${{ github.event.inputs.DEVICE_NAME }}/OrangeFox*.img | cut -d ' ' -f 1)" >> $GITHUB_ENV
        echo "MD5_RAMDISK=$(md5sum out/target/product/${{ github.event.inputs.DEVICE_NAME }}/ramdisk-recovery.img | cut -d ' ' -f 1)" >> $GITHUB_ENV
        echo "MD5_R-RAMDISK=$(md5sum out/target/product/${{ github.event.inputs.DEVICE_NAME }}/ramdisk.img | cut -d ' ' -f 1)" >> $GITHUB_ENV
        echo "MD5_ZIP=$(md5sum out/target/product/${{ github.event.inputs.DEVICE_NAME }}/OrangeFox*.zip | cut -d ' ' -f 1)" >> $GITHUB_ENV
        echo "MD5_TAR=$(md5sum out/target/product/${{ github.event.inputs.DEVICE_NAME }}/OrangeFox*.tar | cut -d ' ' -f 1)" >> $GITHUB_ENV
     
    - name: Upload to Release
      if: github.event.inputs.RELEASE_TYPE == 'oficial'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          OrangeFox/fox_${{ github.event.inputs.MANIFEST_BRANCH }}/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/OrangeFox*.img
          OrangeFox/fox_${{ github.event.inputs.MANIFEST_BRANCH }}/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/ramdisk.img
          OrangeFox/fox_${{ github.event.inputs.MANIFEST_BRANCH }}/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/ramdisk-recovery.img
          OrangeFox/fox_${{ github.event.inputs.MANIFEST_BRANCH }}/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/OrangeFox*.tar
          OrangeFox/fox_${{ github.event.inputs.MANIFEST_BRANCH }}/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/OrangeFox*.zip
        name: OrangeFox Recovery for ${{ github.event.inputs.DEVICE_NAME }} // ${{ env.BUILD_DATE }}
        tag_name: ${{ github.run_id }}
        body: |
          ## OrangeFox Recovery Build - Unofficial
          Build: fox_${{ github.event.inputs.MANIFEST_BRANCH }}
          Device: [Device Tree/Branch](${{ github.event.inputs.DEVICE_TREE }}/tree/${{ github.event.inputs.DEVICE_TREE_BRANCH }})
          Commit: Most recent [commit](${{ github.event.inputs.DEVICE_TREE }}/commit/${{ env.COMMIT_ID }}) during building.
          ## MD5SUM
          * ${{ env.MD5_IMG }} for IMAGE file.
          * ${{ env.MD5_RAMDISK }} for RAMDISK file.
          * ${{ env.MD5_R-RAMDISK }} for RECOVERY RAMDISK file.
          * ${{ env.MD5_ZIP }} for ORANGE FOX ZIP file.
          * ${{ env.MD5_TAR }} for ODIN TAR file.

    - name: Upload to Telegram
      env:
        TELEGRAM_TO: ${{ secrets.TELEGRAM_TO }}
        TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
        MANIFEST_BRANCH: ${{ github.event.inputs.MANIFEST_BRANCH }}
        DEVICE_TREE: ${{ github.event.inputs.DEVICE_TREE }}
        DEVICE_TREE_BRANCH: ${{ github.event.inputs.DEVICE_TREE_BRANCH }}
        COMMIT_ID: ${{ env.COMMIT_ID }}
        MD5_IMG: ${{ env.MD5_IMG }}
        MD5_RAMDISK: ${{ env.MD5_RAMDISK }}
        MD5_R_RAMDISK: ${{ env.MD5_R_RAMDISK }}
        MD5_ZIP: ${{ env.MD5_ZIP }}
        MD5_TAR: ${{ env.MD5_TAR }}
        GITHUB_ACTOR: ${{ github.actor }}
        GITHUB_RUN_ID: ${{ github.run_id }}
      run: |
        TELEGRAM_CHAT_ID="$TELEGRAM_TO"
        TELEGRAM_TOKEN="$TELEGRAM_TOKEN"
        MESSAGE="*## orangefox recovery build - unofficial*
        *build:* fox_${{ github.event.inputs.MANIFEST_BRANCH }}
        *Device:* [Device Tree/Branch](${{ github.event.inputs.DEVICE_TREE }}/tree/${{ github.event.inputs.DEVICE_TREE_BRANCH }})
        *Commit:* [Most recent commit](${{ github.event.inputs.DEVICE_TREE }}/commit/${{ env.COMMIT_ID }})
        *MD5SUM:*
        \`\`\`
        *${{ env.MD5_IMG }}* for IMAGE file.
        *${{ env.MD5_RAMDISK }}* for RAMDISK file.
        *${{ env.MD5_R_RAMDISK }}* for RECOVERY RAMDISK file.
        *${{ env.MD5_ZIP }}* for ORANGE FOX ZIP file.
        *${{ env.MD5_TAR }}* for ODIN TAR file.
        \`\`\`
        [Download Link](https://github.com/${{ github.actor }}/A12s-DevTree/releases/tag/${{ github.run_id }})"
      
        curl -s -X POST https://api.telegram.org/bot$TELEGRAM_TOKEN/sendMessage -d chat_id=$TELEGRAM_CHAT_ID -d text="$MESSAGE"
    
